インターフェースの明確さは、設計スキルと日々の成長度合いをあらわにする。

★インターフェースを作るための経験則
設計者の目的は、いまの役割を果たし、かんたんに再利用でき、将来的な予期せぬ用途にも対応できるコードを書くこと。
 -> 依存できるものを伝えるのは設計者の責任。
　   -> 毎回インターフェースを宣言する。

「パブリック」インターフェースとなるメソッドは、このようであるべき
・明示的にパブリックインターフェースだと特定できる
・「どのように」よりも「何を」になっている　<- 例えば、戻り値を表す名前が付いている
・名前は、考えられる限り、変わり得ないものである
・オプション引数として、ハッシュをとる

public/protected/private　は異なる２つのことを表す
・安定しているか不安定か
・見える範囲
public：安定で、かつどこからでも見られる
private：不安定、クラスからサブクラスからのみ。
protected：不安定、クラスからサブクラスからのみ。　-> 違いはまた今度にしよう。

